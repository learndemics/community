(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{fLVh:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return d}));var a,o=n("cxan"),c=n("+wNj"),i=(n("ERkP"),n("ZVZ0")),b=n("Qr8n"),r=(n("l1C2"),{}),l=(a="PageDescription",function(e){return console.warn("Component '"+a+"' was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",e)}),p={_frontmatter:r},s=b.a;function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)(s,Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(l,{mdxType:"PageDescription"},Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"<FeedbackDialog>")," component is a non-modal dialog that allows your users to\nprovide low-friction, anonymous feedback for a specific page.")),Object(i.b)("h2",null,"Activating the dialog"),Object(i.b)("p",null,"The Feedback button only becomes visible once you’ve supplied an ",Object(i.b)("inlineCode",{parentName:"p"},"onSubmit"),"\nhandler. To do that, we’ll need to shadow the ",Object(i.b)("inlineCode",{parentName:"p"},"FeedbackDialog")," component."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a new javascript file under\n",Object(i.b)("inlineCode",{parentName:"p"},"src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js"),".\nMatching the filepath exactly is important here.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Copy the following snippet into your new file"))),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"import React from 'react';\nimport ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\nconst FeedbackDialog = ({ props }) => {\n  const onSubmit = (data) => {\n    console.log({ ...data });\n  };\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n\nexport default FeedbackDialog;\n")),Object(i.b)("h2",null,"Creating a handler"),Object(i.b)("p",null,"Next, you’ll need a place to send the data. For the Carbon website, we use a\nserverless function that forwards the data to a\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://www.surveygizmo.com/"}),"SurveyGizmo")," quiz. You can see that function\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/carbon-design-system/carbon-website/blob/master/api/survey.ts"}),"here"),"."),Object(i.b)("p",null,"The handler can send a fetch request off to the endpoint you create. Update the\n",Object(i.b)("inlineCode",{parentName:"p"},"onSubmit")," handler to send the data wherever you want. This function receives\nthe following arguments:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"experience"),": “Negative”, “Positive” or “Neutral”"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"comment"),": An optional comment"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"path"),": the window location when the survey was submitted")),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-jsx"}),"const FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-components-feedback-dialog-mdx-76b0bf552db461cca8dd.js.map